// 数组操作

/**
 * 题目描述
 * 现在有多组整数数组，需要将它们合并成一个新的数组。
 * 合并规则，从每个数组里按顺序取出固定长度的内容合并到新的数组中，取完的内容会删除掉，
 * 如果该行不足固定长度或者已经为空，则直接取出剩余部分的内容放到新的数组中，继续下一行。
 * 输入描述
 * 第一行是每次读取的固定长度，0<长度<10
 * 第二行是整数数组的数目，0<数目<1000
 * 第3-n行是需要合并的数组，不同的数组用回车换行分隔，数组内部用逗号分隔，最大不超过100个元素。
 * 输出描述
 * 输出一个新的数组，用逗号分隔。
 * 
 * 示例1
 * 3
 * 2
 * 2,5,6,7,9,5,7
 * 1,7,4,3,4
 * 
 * 输出
 * 2,5,6,1,7,4,7,9,5,3,4,7
 */

/**
 * 
 * @param {number} n 每次截取的长度
 * @param {number} m 数字数组的数量
 * @param {[[]]} arr 数字数组
 * @returns {[]} 新成的数组
 */
function solution(n, m, arr) {
  let res = [];
  while (arr.length) { // 还有未处理完的元素
    for (let i = 0; i < arr.length; i++) {
      // 取出 n 个元素
      let cur = arr[i];
      if (cur.length === 0) {
        arr.splice(i, 1);// arr 删除空数组
      } else {
        // res = res.concat(temp);
        res.push(...cur.splice(0, n));
      }
    }
  }
  console.log(res);
}

// solution(3, 2, [[2, 5, 6, 7, 9, 5, 7], [1, 7, 4, 3, 4]]);

solution(4, 3, [[1, 2, 3, 4, 5, 6], [1, 2, 3],[1, 2, 3, 4]]);

